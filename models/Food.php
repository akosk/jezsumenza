<?php

namespace app\models;


use app\components\ArChangeLoggerBehavior;
use creocoder\translateable\TranslateableBehavior;
use Yii;
use yii\helpers\ArrayHelper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "food".
 *
 * @property string $name
 * @property string $description
 */
class Food extends FoodBase
{
    public $imageFile;

    const CATEGORY_SOUP = "SOUP";
    const CATEGORY_MAIN_COURSE = "MAIN_COURSE";

    public function behaviors()
    {

        return [
            'translateable' => [
                'class' => TranslateableBehavior::className(),
                'translationAttributes' => ['name', 'description'],
                // translationRelation => 'translations',
                // translationLanguageAttribute => 'language',
            ],
            [
                'class' => ArChangeLoggerBehavior::className(),
                'logClassName' => 'étel',
                'logNameProperty' => function () {
                    return $this->name;
                },
            ]

        ];
    }

    public function rules()
    {
        return ArrayHelper::merge(
            parent::rules(),
            [
                [['imageFile'], 'file', 'skipOnEmpty' => true, 'extensions' => 'png, jpg'],

            ]

        );
    }


    public function transactions()
    {
        return [
            self::SCENARIO_DEFAULT => self::OP_INSERT | self::OP_UPDATE,
        ];
    }

    public function getTranslations()
    {
        return $this->hasMany(FoodTranslation::className(), ['food_id' => 'id']);
    }

    public function getHuTranslations()
    {
        return $this->hasMany(FoodTranslation::className(), ['food_id' => 'id'])->where(['language' => 'hu-HU']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($this->imageFile) {
            $this->imageFile->saveAs("images/foods/{$this->image}");
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            if ($this->imageFile) {
                $this->image = Yii::$app->security->generateRandomString() . "." . $this->imageFile->extension;
            }
            return true;
        } else {
            return false;
        }

    }


    public function attributeLabels()
    {
        return [
            'id' => 'Azonosító',
            'category' => 'Kategória',
            'name' => 'Név',
            'description' => 'Leírás',
        ];
    }
}